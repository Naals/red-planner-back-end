
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `TimeBlock` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model TimeBlock
 * 
 */
export type TimeBlockModel = runtime.Types.Result.DefaultSelection<Prisma.$TimeBlockPayload>

export type AggregateTimeBlock = {
  _count: TimeBlockCountAggregateOutputType | null
  _avg: TimeBlockAvgAggregateOutputType | null
  _sum: TimeBlockSumAggregateOutputType | null
  _min: TimeBlockMinAggregateOutputType | null
  _max: TimeBlockMaxAggregateOutputType | null
}

export type TimeBlockAvgAggregateOutputType = {
  duration: number | null
  order: number | null
}

export type TimeBlockSumAggregateOutputType = {
  duration: number | null
  order: number | null
}

export type TimeBlockMinAggregateOutputType = {
  id: string | null
  createdAt: Date | null
  updatedAt: Date | null
  name: string | null
  color: string | null
  duration: number | null
  order: number | null
  userId: string | null
}

export type TimeBlockMaxAggregateOutputType = {
  id: string | null
  createdAt: Date | null
  updatedAt: Date | null
  name: string | null
  color: string | null
  duration: number | null
  order: number | null
  userId: string | null
}

export type TimeBlockCountAggregateOutputType = {
  id: number
  createdAt: number
  updatedAt: number
  name: number
  color: number
  duration: number
  order: number
  userId: number
  _all: number
}


export type TimeBlockAvgAggregateInputType = {
  duration?: true
  order?: true
}

export type TimeBlockSumAggregateInputType = {
  duration?: true
  order?: true
}

export type TimeBlockMinAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  name?: true
  color?: true
  duration?: true
  order?: true
  userId?: true
}

export type TimeBlockMaxAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  name?: true
  color?: true
  duration?: true
  order?: true
  userId?: true
}

export type TimeBlockCountAggregateInputType = {
  id?: true
  createdAt?: true
  updatedAt?: true
  name?: true
  color?: true
  duration?: true
  order?: true
  userId?: true
  _all?: true
}

export type TimeBlockAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TimeBlock to aggregate.
   */
  where?: Prisma.TimeBlockWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TimeBlocks to fetch.
   */
  orderBy?: Prisma.TimeBlockOrderByWithRelationInput | Prisma.TimeBlockOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TimeBlockWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TimeBlocks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TimeBlocks.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned TimeBlocks
  **/
  _count?: true | TimeBlockCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TimeBlockAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TimeBlockSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TimeBlockMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TimeBlockMaxAggregateInputType
}

export type GetTimeBlockAggregateType<T extends TimeBlockAggregateArgs> = {
      [P in keyof T & keyof AggregateTimeBlock]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTimeBlock[P]>
    : Prisma.GetScalarType<T[P], AggregateTimeBlock[P]>
}




export type TimeBlockGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TimeBlockWhereInput
  orderBy?: Prisma.TimeBlockOrderByWithAggregationInput | Prisma.TimeBlockOrderByWithAggregationInput[]
  by: Prisma.TimeBlockScalarFieldEnum[] | Prisma.TimeBlockScalarFieldEnum
  having?: Prisma.TimeBlockScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TimeBlockCountAggregateInputType | true
  _avg?: TimeBlockAvgAggregateInputType
  _sum?: TimeBlockSumAggregateInputType
  _min?: TimeBlockMinAggregateInputType
  _max?: TimeBlockMaxAggregateInputType
}

export type TimeBlockGroupByOutputType = {
  id: string
  createdAt: Date
  updatedAt: Date
  name: string
  color: string | null
  duration: number
  order: number
  userId: string
  _count: TimeBlockCountAggregateOutputType | null
  _avg: TimeBlockAvgAggregateOutputType | null
  _sum: TimeBlockSumAggregateOutputType | null
  _min: TimeBlockMinAggregateOutputType | null
  _max: TimeBlockMaxAggregateOutputType | null
}

type GetTimeBlockGroupByPayload<T extends TimeBlockGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TimeBlockGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TimeBlockGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TimeBlockGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TimeBlockGroupByOutputType[P]>
      }
    >
  >



export type TimeBlockWhereInput = {
  AND?: Prisma.TimeBlockWhereInput | Prisma.TimeBlockWhereInput[]
  OR?: Prisma.TimeBlockWhereInput[]
  NOT?: Prisma.TimeBlockWhereInput | Prisma.TimeBlockWhereInput[]
  id?: Prisma.StringFilter<"TimeBlock"> | string
  createdAt?: Prisma.DateTimeFilter<"TimeBlock"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TimeBlock"> | Date | string
  name?: Prisma.StringFilter<"TimeBlock"> | string
  color?: Prisma.StringNullableFilter<"TimeBlock"> | string | null
  duration?: Prisma.IntFilter<"TimeBlock"> | number
  order?: Prisma.IntFilter<"TimeBlock"> | number
  userId?: Prisma.StringFilter<"TimeBlock"> | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type TimeBlockOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  name?: Prisma.SortOrder
  color?: Prisma.SortOrderInput | Prisma.SortOrder
  duration?: Prisma.SortOrder
  order?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
}

export type TimeBlockWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.TimeBlockWhereInput | Prisma.TimeBlockWhereInput[]
  OR?: Prisma.TimeBlockWhereInput[]
  NOT?: Prisma.TimeBlockWhereInput | Prisma.TimeBlockWhereInput[]
  createdAt?: Prisma.DateTimeFilter<"TimeBlock"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TimeBlock"> | Date | string
  name?: Prisma.StringFilter<"TimeBlock"> | string
  color?: Prisma.StringNullableFilter<"TimeBlock"> | string | null
  duration?: Prisma.IntFilter<"TimeBlock"> | number
  order?: Prisma.IntFilter<"TimeBlock"> | number
  userId?: Prisma.StringFilter<"TimeBlock"> | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id">

export type TimeBlockOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  name?: Prisma.SortOrder
  color?: Prisma.SortOrderInput | Prisma.SortOrder
  duration?: Prisma.SortOrder
  order?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  _count?: Prisma.TimeBlockCountOrderByAggregateInput
  _avg?: Prisma.TimeBlockAvgOrderByAggregateInput
  _max?: Prisma.TimeBlockMaxOrderByAggregateInput
  _min?: Prisma.TimeBlockMinOrderByAggregateInput
  _sum?: Prisma.TimeBlockSumOrderByAggregateInput
}

export type TimeBlockScalarWhereWithAggregatesInput = {
  AND?: Prisma.TimeBlockScalarWhereWithAggregatesInput | Prisma.TimeBlockScalarWhereWithAggregatesInput[]
  OR?: Prisma.TimeBlockScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TimeBlockScalarWhereWithAggregatesInput | Prisma.TimeBlockScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"TimeBlock"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"TimeBlock"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"TimeBlock"> | Date | string
  name?: Prisma.StringWithAggregatesFilter<"TimeBlock"> | string
  color?: Prisma.StringNullableWithAggregatesFilter<"TimeBlock"> | string | null
  duration?: Prisma.IntWithAggregatesFilter<"TimeBlock"> | number
  order?: Prisma.IntWithAggregatesFilter<"TimeBlock"> | number
  userId?: Prisma.StringWithAggregatesFilter<"TimeBlock"> | string
}

export type TimeBlockCreateInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  name: string
  color?: string | null
  duration: number
  order?: number
  user: Prisma.UserCreateNestedOneWithoutTimeBlocksInput
}

export type TimeBlockUncheckedCreateInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  name: string
  color?: string | null
  duration: number
  order?: number
  userId: string
}

export type TimeBlockUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
  user?: Prisma.UserUpdateOneRequiredWithoutTimeBlocksNestedInput
}

export type TimeBlockUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type TimeBlockCreateManyInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  name: string
  color?: string | null
  duration: number
  order?: number
  userId: string
}

export type TimeBlockUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
}

export type TimeBlockUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
  userId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type TimeBlockListRelationFilter = {
  every?: Prisma.TimeBlockWhereInput
  some?: Prisma.TimeBlockWhereInput
  none?: Prisma.TimeBlockWhereInput
}

export type TimeBlockOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type TimeBlockCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  name?: Prisma.SortOrder
  color?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  order?: Prisma.SortOrder
  userId?: Prisma.SortOrder
}

export type TimeBlockAvgOrderByAggregateInput = {
  duration?: Prisma.SortOrder
  order?: Prisma.SortOrder
}

export type TimeBlockMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  name?: Prisma.SortOrder
  color?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  order?: Prisma.SortOrder
  userId?: Prisma.SortOrder
}

export type TimeBlockMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  name?: Prisma.SortOrder
  color?: Prisma.SortOrder
  duration?: Prisma.SortOrder
  order?: Prisma.SortOrder
  userId?: Prisma.SortOrder
}

export type TimeBlockSumOrderByAggregateInput = {
  duration?: Prisma.SortOrder
  order?: Prisma.SortOrder
}

export type TimeBlockCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.TimeBlockCreateWithoutUserInput, Prisma.TimeBlockUncheckedCreateWithoutUserInput> | Prisma.TimeBlockCreateWithoutUserInput[] | Prisma.TimeBlockUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TimeBlockCreateOrConnectWithoutUserInput | Prisma.TimeBlockCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.TimeBlockCreateManyUserInputEnvelope
  connect?: Prisma.TimeBlockWhereUniqueInput | Prisma.TimeBlockWhereUniqueInput[]
}

export type TimeBlockUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.TimeBlockCreateWithoutUserInput, Prisma.TimeBlockUncheckedCreateWithoutUserInput> | Prisma.TimeBlockCreateWithoutUserInput[] | Prisma.TimeBlockUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TimeBlockCreateOrConnectWithoutUserInput | Prisma.TimeBlockCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.TimeBlockCreateManyUserInputEnvelope
  connect?: Prisma.TimeBlockWhereUniqueInput | Prisma.TimeBlockWhereUniqueInput[]
}

export type TimeBlockUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.TimeBlockCreateWithoutUserInput, Prisma.TimeBlockUncheckedCreateWithoutUserInput> | Prisma.TimeBlockCreateWithoutUserInput[] | Prisma.TimeBlockUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TimeBlockCreateOrConnectWithoutUserInput | Prisma.TimeBlockCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.TimeBlockUpsertWithWhereUniqueWithoutUserInput | Prisma.TimeBlockUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.TimeBlockCreateManyUserInputEnvelope
  set?: Prisma.TimeBlockWhereUniqueInput | Prisma.TimeBlockWhereUniqueInput[]
  disconnect?: Prisma.TimeBlockWhereUniqueInput | Prisma.TimeBlockWhereUniqueInput[]
  delete?: Prisma.TimeBlockWhereUniqueInput | Prisma.TimeBlockWhereUniqueInput[]
  connect?: Prisma.TimeBlockWhereUniqueInput | Prisma.TimeBlockWhereUniqueInput[]
  update?: Prisma.TimeBlockUpdateWithWhereUniqueWithoutUserInput | Prisma.TimeBlockUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.TimeBlockUpdateManyWithWhereWithoutUserInput | Prisma.TimeBlockUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.TimeBlockScalarWhereInput | Prisma.TimeBlockScalarWhereInput[]
}

export type TimeBlockUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.TimeBlockCreateWithoutUserInput, Prisma.TimeBlockUncheckedCreateWithoutUserInput> | Prisma.TimeBlockCreateWithoutUserInput[] | Prisma.TimeBlockUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.TimeBlockCreateOrConnectWithoutUserInput | Prisma.TimeBlockCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.TimeBlockUpsertWithWhereUniqueWithoutUserInput | Prisma.TimeBlockUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.TimeBlockCreateManyUserInputEnvelope
  set?: Prisma.TimeBlockWhereUniqueInput | Prisma.TimeBlockWhereUniqueInput[]
  disconnect?: Prisma.TimeBlockWhereUniqueInput | Prisma.TimeBlockWhereUniqueInput[]
  delete?: Prisma.TimeBlockWhereUniqueInput | Prisma.TimeBlockWhereUniqueInput[]
  connect?: Prisma.TimeBlockWhereUniqueInput | Prisma.TimeBlockWhereUniqueInput[]
  update?: Prisma.TimeBlockUpdateWithWhereUniqueWithoutUserInput | Prisma.TimeBlockUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.TimeBlockUpdateManyWithWhereWithoutUserInput | Prisma.TimeBlockUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.TimeBlockScalarWhereInput | Prisma.TimeBlockScalarWhereInput[]
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type TimeBlockCreateWithoutUserInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  name: string
  color?: string | null
  duration: number
  order?: number
}

export type TimeBlockUncheckedCreateWithoutUserInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  name: string
  color?: string | null
  duration: number
  order?: number
}

export type TimeBlockCreateOrConnectWithoutUserInput = {
  where: Prisma.TimeBlockWhereUniqueInput
  create: Prisma.XOR<Prisma.TimeBlockCreateWithoutUserInput, Prisma.TimeBlockUncheckedCreateWithoutUserInput>
}

export type TimeBlockCreateManyUserInputEnvelope = {
  data: Prisma.TimeBlockCreateManyUserInput | Prisma.TimeBlockCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type TimeBlockUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.TimeBlockWhereUniqueInput
  update: Prisma.XOR<Prisma.TimeBlockUpdateWithoutUserInput, Prisma.TimeBlockUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.TimeBlockCreateWithoutUserInput, Prisma.TimeBlockUncheckedCreateWithoutUserInput>
}

export type TimeBlockUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.TimeBlockWhereUniqueInput
  data: Prisma.XOR<Prisma.TimeBlockUpdateWithoutUserInput, Prisma.TimeBlockUncheckedUpdateWithoutUserInput>
}

export type TimeBlockUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.TimeBlockScalarWhereInput
  data: Prisma.XOR<Prisma.TimeBlockUpdateManyMutationInput, Prisma.TimeBlockUncheckedUpdateManyWithoutUserInput>
}

export type TimeBlockScalarWhereInput = {
  AND?: Prisma.TimeBlockScalarWhereInput | Prisma.TimeBlockScalarWhereInput[]
  OR?: Prisma.TimeBlockScalarWhereInput[]
  NOT?: Prisma.TimeBlockScalarWhereInput | Prisma.TimeBlockScalarWhereInput[]
  id?: Prisma.StringFilter<"TimeBlock"> | string
  createdAt?: Prisma.DateTimeFilter<"TimeBlock"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TimeBlock"> | Date | string
  name?: Prisma.StringFilter<"TimeBlock"> | string
  color?: Prisma.StringNullableFilter<"TimeBlock"> | string | null
  duration?: Prisma.IntFilter<"TimeBlock"> | number
  order?: Prisma.IntFilter<"TimeBlock"> | number
  userId?: Prisma.StringFilter<"TimeBlock"> | string
}

export type TimeBlockCreateManyUserInput = {
  id?: string
  createdAt?: Date | string
  updatedAt?: Date | string
  name: string
  color?: string | null
  duration: number
  order?: number
}

export type TimeBlockUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
}

export type TimeBlockUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
}

export type TimeBlockUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  color?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  duration?: Prisma.IntFieldUpdateOperationsInput | number
  order?: Prisma.IntFieldUpdateOperationsInput | number
}



export type TimeBlockSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  name?: boolean
  color?: boolean
  duration?: boolean
  order?: boolean
  userId?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["timeBlock"]>

export type TimeBlockSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  name?: boolean
  color?: boolean
  duration?: boolean
  order?: boolean
  userId?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["timeBlock"]>

export type TimeBlockSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  name?: boolean
  color?: boolean
  duration?: boolean
  order?: boolean
  userId?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["timeBlock"]>

export type TimeBlockSelectScalar = {
  id?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  name?: boolean
  color?: boolean
  duration?: boolean
  order?: boolean
  userId?: boolean
}

export type TimeBlockOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "name" | "color" | "duration" | "order" | "userId", ExtArgs["result"]["timeBlock"]>
export type TimeBlockInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type TimeBlockIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type TimeBlockIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $TimeBlockPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "TimeBlock"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    createdAt: Date
    updatedAt: Date
    name: string
    color: string | null
    duration: number
    order: number
    userId: string
  }, ExtArgs["result"]["timeBlock"]>
  composites: {}
}

export type TimeBlockGetPayload<S extends boolean | null | undefined | TimeBlockDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload, S>

export type TimeBlockCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TimeBlockFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TimeBlockCountAggregateInputType | true
  }

export interface TimeBlockDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TimeBlock'], meta: { name: 'TimeBlock' } }
  /**
   * Find zero or one TimeBlock that matches the filter.
   * @param {TimeBlockFindUniqueArgs} args - Arguments to find a TimeBlock
   * @example
   * // Get one TimeBlock
   * const timeBlock = await prisma.timeBlock.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TimeBlockFindUniqueArgs>(args: Prisma.SelectSubset<T, TimeBlockFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TimeBlockClient<runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one TimeBlock that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TimeBlockFindUniqueOrThrowArgs} args - Arguments to find a TimeBlock
   * @example
   * // Get one TimeBlock
   * const timeBlock = await prisma.timeBlock.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TimeBlockFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TimeBlockFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TimeBlockClient<runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TimeBlock that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimeBlockFindFirstArgs} args - Arguments to find a TimeBlock
   * @example
   * // Get one TimeBlock
   * const timeBlock = await prisma.timeBlock.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TimeBlockFindFirstArgs>(args?: Prisma.SelectSubset<T, TimeBlockFindFirstArgs<ExtArgs>>): Prisma.Prisma__TimeBlockClient<runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TimeBlock that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimeBlockFindFirstOrThrowArgs} args - Arguments to find a TimeBlock
   * @example
   * // Get one TimeBlock
   * const timeBlock = await prisma.timeBlock.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TimeBlockFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TimeBlockFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TimeBlockClient<runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more TimeBlocks that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimeBlockFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TimeBlocks
   * const timeBlocks = await prisma.timeBlock.findMany()
   * 
   * // Get first 10 TimeBlocks
   * const timeBlocks = await prisma.timeBlock.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const timeBlockWithIdOnly = await prisma.timeBlock.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TimeBlockFindManyArgs>(args?: Prisma.SelectSubset<T, TimeBlockFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a TimeBlock.
   * @param {TimeBlockCreateArgs} args - Arguments to create a TimeBlock.
   * @example
   * // Create one TimeBlock
   * const TimeBlock = await prisma.timeBlock.create({
   *   data: {
   *     // ... data to create a TimeBlock
   *   }
   * })
   * 
   */
  create<T extends TimeBlockCreateArgs>(args: Prisma.SelectSubset<T, TimeBlockCreateArgs<ExtArgs>>): Prisma.Prisma__TimeBlockClient<runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many TimeBlocks.
   * @param {TimeBlockCreateManyArgs} args - Arguments to create many TimeBlocks.
   * @example
   * // Create many TimeBlocks
   * const timeBlock = await prisma.timeBlock.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TimeBlockCreateManyArgs>(args?: Prisma.SelectSubset<T, TimeBlockCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many TimeBlocks and returns the data saved in the database.
   * @param {TimeBlockCreateManyAndReturnArgs} args - Arguments to create many TimeBlocks.
   * @example
   * // Create many TimeBlocks
   * const timeBlock = await prisma.timeBlock.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many TimeBlocks and only return the `id`
   * const timeBlockWithIdOnly = await prisma.timeBlock.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TimeBlockCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TimeBlockCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a TimeBlock.
   * @param {TimeBlockDeleteArgs} args - Arguments to delete one TimeBlock.
   * @example
   * // Delete one TimeBlock
   * const TimeBlock = await prisma.timeBlock.delete({
   *   where: {
   *     // ... filter to delete one TimeBlock
   *   }
   * })
   * 
   */
  delete<T extends TimeBlockDeleteArgs>(args: Prisma.SelectSubset<T, TimeBlockDeleteArgs<ExtArgs>>): Prisma.Prisma__TimeBlockClient<runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one TimeBlock.
   * @param {TimeBlockUpdateArgs} args - Arguments to update one TimeBlock.
   * @example
   * // Update one TimeBlock
   * const timeBlock = await prisma.timeBlock.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TimeBlockUpdateArgs>(args: Prisma.SelectSubset<T, TimeBlockUpdateArgs<ExtArgs>>): Prisma.Prisma__TimeBlockClient<runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more TimeBlocks.
   * @param {TimeBlockDeleteManyArgs} args - Arguments to filter TimeBlocks to delete.
   * @example
   * // Delete a few TimeBlocks
   * const { count } = await prisma.timeBlock.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TimeBlockDeleteManyArgs>(args?: Prisma.SelectSubset<T, TimeBlockDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TimeBlocks.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimeBlockUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TimeBlocks
   * const timeBlock = await prisma.timeBlock.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TimeBlockUpdateManyArgs>(args: Prisma.SelectSubset<T, TimeBlockUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TimeBlocks and returns the data updated in the database.
   * @param {TimeBlockUpdateManyAndReturnArgs} args - Arguments to update many TimeBlocks.
   * @example
   * // Update many TimeBlocks
   * const timeBlock = await prisma.timeBlock.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more TimeBlocks and only return the `id`
   * const timeBlockWithIdOnly = await prisma.timeBlock.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TimeBlockUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TimeBlockUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one TimeBlock.
   * @param {TimeBlockUpsertArgs} args - Arguments to update or create a TimeBlock.
   * @example
   * // Update or create a TimeBlock
   * const timeBlock = await prisma.timeBlock.upsert({
   *   create: {
   *     // ... data to create a TimeBlock
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TimeBlock we want to update
   *   }
   * })
   */
  upsert<T extends TimeBlockUpsertArgs>(args: Prisma.SelectSubset<T, TimeBlockUpsertArgs<ExtArgs>>): Prisma.Prisma__TimeBlockClient<runtime.Types.Result.GetResult<Prisma.$TimeBlockPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of TimeBlocks.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimeBlockCountArgs} args - Arguments to filter TimeBlocks to count.
   * @example
   * // Count the number of TimeBlocks
   * const count = await prisma.timeBlock.count({
   *   where: {
   *     // ... the filter for the TimeBlocks we want to count
   *   }
   * })
  **/
  count<T extends TimeBlockCountArgs>(
    args?: Prisma.Subset<T, TimeBlockCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TimeBlockCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a TimeBlock.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimeBlockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TimeBlockAggregateArgs>(args: Prisma.Subset<T, TimeBlockAggregateArgs>): Prisma.PrismaPromise<GetTimeBlockAggregateType<T>>

  /**
   * Group by TimeBlock.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TimeBlockGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TimeBlockGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TimeBlockGroupByArgs['orderBy'] }
      : { orderBy?: TimeBlockGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TimeBlockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTimeBlockGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the TimeBlock model
 */
readonly fields: TimeBlockFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for TimeBlock.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TimeBlockClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the TimeBlock model
 */
export interface TimeBlockFieldRefs {
  readonly id: Prisma.FieldRef<"TimeBlock", 'String'>
  readonly createdAt: Prisma.FieldRef<"TimeBlock", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"TimeBlock", 'DateTime'>
  readonly name: Prisma.FieldRef<"TimeBlock", 'String'>
  readonly color: Prisma.FieldRef<"TimeBlock", 'String'>
  readonly duration: Prisma.FieldRef<"TimeBlock", 'Int'>
  readonly order: Prisma.FieldRef<"TimeBlock", 'Int'>
  readonly userId: Prisma.FieldRef<"TimeBlock", 'String'>
}
    

// Custom InputTypes
/**
 * TimeBlock findUnique
 */
export type TimeBlockFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockInclude<ExtArgs> | null
  /**
   * Filter, which TimeBlock to fetch.
   */
  where: Prisma.TimeBlockWhereUniqueInput
}

/**
 * TimeBlock findUniqueOrThrow
 */
export type TimeBlockFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockInclude<ExtArgs> | null
  /**
   * Filter, which TimeBlock to fetch.
   */
  where: Prisma.TimeBlockWhereUniqueInput
}

/**
 * TimeBlock findFirst
 */
export type TimeBlockFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockInclude<ExtArgs> | null
  /**
   * Filter, which TimeBlock to fetch.
   */
  where?: Prisma.TimeBlockWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TimeBlocks to fetch.
   */
  orderBy?: Prisma.TimeBlockOrderByWithRelationInput | Prisma.TimeBlockOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TimeBlocks.
   */
  cursor?: Prisma.TimeBlockWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TimeBlocks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TimeBlocks.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TimeBlocks.
   */
  distinct?: Prisma.TimeBlockScalarFieldEnum | Prisma.TimeBlockScalarFieldEnum[]
}

/**
 * TimeBlock findFirstOrThrow
 */
export type TimeBlockFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockInclude<ExtArgs> | null
  /**
   * Filter, which TimeBlock to fetch.
   */
  where?: Prisma.TimeBlockWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TimeBlocks to fetch.
   */
  orderBy?: Prisma.TimeBlockOrderByWithRelationInput | Prisma.TimeBlockOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TimeBlocks.
   */
  cursor?: Prisma.TimeBlockWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TimeBlocks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TimeBlocks.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TimeBlocks.
   */
  distinct?: Prisma.TimeBlockScalarFieldEnum | Prisma.TimeBlockScalarFieldEnum[]
}

/**
 * TimeBlock findMany
 */
export type TimeBlockFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockInclude<ExtArgs> | null
  /**
   * Filter, which TimeBlocks to fetch.
   */
  where?: Prisma.TimeBlockWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TimeBlocks to fetch.
   */
  orderBy?: Prisma.TimeBlockOrderByWithRelationInput | Prisma.TimeBlockOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing TimeBlocks.
   */
  cursor?: Prisma.TimeBlockWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TimeBlocks from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TimeBlocks.
   */
  skip?: number
  distinct?: Prisma.TimeBlockScalarFieldEnum | Prisma.TimeBlockScalarFieldEnum[]
}

/**
 * TimeBlock create
 */
export type TimeBlockCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockInclude<ExtArgs> | null
  /**
   * The data needed to create a TimeBlock.
   */
  data: Prisma.XOR<Prisma.TimeBlockCreateInput, Prisma.TimeBlockUncheckedCreateInput>
}

/**
 * TimeBlock createMany
 */
export type TimeBlockCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many TimeBlocks.
   */
  data: Prisma.TimeBlockCreateManyInput | Prisma.TimeBlockCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TimeBlock createManyAndReturn
 */
export type TimeBlockCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * The data used to create many TimeBlocks.
   */
  data: Prisma.TimeBlockCreateManyInput | Prisma.TimeBlockCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * TimeBlock update
 */
export type TimeBlockUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockInclude<ExtArgs> | null
  /**
   * The data needed to update a TimeBlock.
   */
  data: Prisma.XOR<Prisma.TimeBlockUpdateInput, Prisma.TimeBlockUncheckedUpdateInput>
  /**
   * Choose, which TimeBlock to update.
   */
  where: Prisma.TimeBlockWhereUniqueInput
}

/**
 * TimeBlock updateMany
 */
export type TimeBlockUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update TimeBlocks.
   */
  data: Prisma.XOR<Prisma.TimeBlockUpdateManyMutationInput, Prisma.TimeBlockUncheckedUpdateManyInput>
  /**
   * Filter which TimeBlocks to update
   */
  where?: Prisma.TimeBlockWhereInput
  /**
   * Limit how many TimeBlocks to update.
   */
  limit?: number
}

/**
 * TimeBlock updateManyAndReturn
 */
export type TimeBlockUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * The data used to update TimeBlocks.
   */
  data: Prisma.XOR<Prisma.TimeBlockUpdateManyMutationInput, Prisma.TimeBlockUncheckedUpdateManyInput>
  /**
   * Filter which TimeBlocks to update
   */
  where?: Prisma.TimeBlockWhereInput
  /**
   * Limit how many TimeBlocks to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * TimeBlock upsert
 */
export type TimeBlockUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockInclude<ExtArgs> | null
  /**
   * The filter to search for the TimeBlock to update in case it exists.
   */
  where: Prisma.TimeBlockWhereUniqueInput
  /**
   * In case the TimeBlock found by the `where` argument doesn't exist, create a new TimeBlock with this data.
   */
  create: Prisma.XOR<Prisma.TimeBlockCreateInput, Prisma.TimeBlockUncheckedCreateInput>
  /**
   * In case the TimeBlock was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TimeBlockUpdateInput, Prisma.TimeBlockUncheckedUpdateInput>
}

/**
 * TimeBlock delete
 */
export type TimeBlockDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockInclude<ExtArgs> | null
  /**
   * Filter which TimeBlock to delete.
   */
  where: Prisma.TimeBlockWhereUniqueInput
}

/**
 * TimeBlock deleteMany
 */
export type TimeBlockDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TimeBlocks to delete
   */
  where?: Prisma.TimeBlockWhereInput
  /**
   * Limit how many TimeBlocks to delete.
   */
  limit?: number
}

/**
 * TimeBlock without action
 */
export type TimeBlockDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TimeBlock
   */
  select?: Prisma.TimeBlockSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TimeBlock
   */
  omit?: Prisma.TimeBlockOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TimeBlockInclude<ExtArgs> | null
}
